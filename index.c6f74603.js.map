{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-049c92e338342cee.js","node_modules/.pnpm/nanoevents@6.0.2/node_modules/nanoevents/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/log/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/is-first-older/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/ws-connection/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/memory-store/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/logux-error/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/connect/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/base-node/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/sync/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/ping/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/debug/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/error/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/headers/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/client-node/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/local-pair/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/reconnect/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/parse-id/index.js","status/index.js","badge/index.js","node_modules/.pnpm/nanoid@3.1.30/node_modules/nanoid/index.browser.js","logux-undo-error/index.js","client/index.js","cross-tab-client/index.js","confirm/index.js","log/index.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-bba6d1e5fb5aec58.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-cff18ed4cada7e17.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-aa3f07d6f2fb58b5.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-c31475119635e562.js","badge/styles/index.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-4d4d7cc23529ba8f.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-96e102d085ef7a3f.js","node_modules/.pnpm/@parcel+runtime-js@2.1.0_@parcel+core@2.1.0/node_modules/@parcel/runtime-js/lib/runtime-0820a3a9f436125c.js","test/demo/index.js","track/index.js","attention/index.js","favicon/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"g3rFI\\\":\\\"index.c6f74603.js\\\",\\\"6oYAh\\\":\\\"refresh.f7f11930.svg\\\",\\\"iEz5C\\\":\\\"success.5585cf5f.svg\\\",\\\"cULX8\\\":\\\"offline.c7da2f9d.svg\\\",\\\"aF8lW\\\":\\\"error.8319e405.svg\\\",\\\"joALL\\\":\\\"offline.203f1963.png\\\",\\\"8ySKy\\\":\\\"normal.60452f34.png\\\",\\\"9op2g\\\":\\\"error.a2ca88ad.png\\\"}\"));","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","import { createNanoEvents } from 'nanoevents'\n\nexport function actionEvents(emitter, event, action, meta) {\n  if (action.id) {\n    emitter.emit(`${event}-${action.type}-${action.id}`, action, meta)\n  }\n  emitter.emit(`${event}-${action.type}-`, action, meta)\n  emitter.emit(event, action, meta)\n}\n\nexport class Log {\n  constructor(opts = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof opts.nodeId === 'undefined') {\n        throw new Error('Expected node ID')\n      }\n      if (typeof opts.store !== 'object') {\n        throw new Error('Expected store')\n      }\n      if (opts.nodeId.includes(' ')) {\n        throw new Error('Space is prohibited in node ID')\n      }\n    }\n\n    this.nodeId = opts.nodeId\n\n    this.lastTime = 0\n    this.sequence = 0\n\n    this.store = opts.store\n\n    this.emitter = createNanoEvents()\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  type(type, listener, opts = {}) {\n    let event = opts.event || 'add'\n    let id = opts.id || ''\n    return this.emitter.on(`${event}-${type}-${id}`, listener)\n  }\n\n  async add(action, meta = {}) {\n    if (typeof action.type === 'undefined') {\n      throw new Error('Expected \"type\" in action')\n    }\n\n    let newId = false\n    if (typeof meta.id === 'undefined') {\n      newId = true\n      meta.id = this.generateId()\n    }\n\n    if (typeof meta.time === 'undefined') {\n      meta.time = parseInt(meta.id)\n    }\n\n    if (typeof meta.reasons === 'undefined') {\n      meta.reasons = []\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(meta.reasons)) {\n        throw new Error('Expected \"reasons\" to be an array of strings')\n      }\n\n      for (let reason of meta.reasons) {\n        if (typeof reason !== 'string') {\n          throw new Error('Expected \"reasons\" to be an array of strings')\n        }\n      }\n\n      if (typeof meta.indexes !== 'undefined') {\n        if (!Array.isArray(meta.indexes)) {\n          throw new Error('Expected \"indexes\" to be an array of strings')\n        }\n\n        for (let index of meta.indexes) {\n          if (typeof index !== 'string') {\n            throw new Error('Expected \"indexes\" to be an array of strings')\n          }\n        }\n      }\n    }\n\n    actionEvents(this.emitter, 'preadd', action, meta)\n\n    if (meta.keepLast) {\n      this.removeReason(meta.keepLast, { olderThan: meta })\n      meta.reasons.push(meta.keepLast)\n    }\n\n    if (meta.reasons.length === 0 && newId) {\n      actionEvents(this.emitter, 'add', action, meta)\n      actionEvents(this.emitter, 'clean', action, meta)\n      return meta\n    } else if (meta.reasons.length === 0) {\n      let [action2] = await this.store.byId(meta.id)\n      if (action2) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        actionEvents(this.emitter, 'clean', action, meta)\n        return meta\n      }\n    } else {\n      let addedMeta = await this.store.add(action, meta)\n      if (addedMeta === false) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        return addedMeta\n      }\n    }\n  }\n\n  generateId() {\n    let now = Date.now()\n    if (now <= this.lastTime) {\n      now = this.lastTime\n      this.sequence += 1\n    } else {\n      this.lastTime = now\n      this.sequence = 0\n    }\n    return now + ' ' + this.nodeId + ' ' + this.sequence\n  }\n\n  each(opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = { order: 'created' }\n    }\n\n    let store = this.store\n    return new Promise(resolve => {\n      async function nextPage(get) {\n        let page = await get()\n        let result\n        for (let i = page.entries.length - 1; i >= 0; i--) {\n          let entry = page.entries[i]\n          result = callback(entry[0], entry[1])\n          if (result === false) break\n        }\n\n        if (result === false || !page.next) {\n          resolve()\n        } else {\n          nextPage(page.next)\n        }\n      }\n\n      nextPage(store.get.bind(store, opts))\n    })\n  }\n\n  async changeMeta(id, diff) {\n    for (let k in diff) {\n      if (\n        k === 'id' ||\n        k === 'added' ||\n        k === 'time' ||\n        k === 'subprotocol' ||\n        k === 'indexes'\n      ) {\n        throw new Error('Meta \"' + k + '\" is read-only')\n      }\n    }\n\n    if (diff.reasons && diff.reasons.length === 0) {\n      let entry = await this.store.remove(id)\n      if (entry) {\n        for (let k in diff) entry[1][k] = diff[k]\n        actionEvents(this.emitter, 'clean', entry[0], entry[1])\n      }\n      return !!entry\n    } else {\n      return this.store.changeMeta(id, diff)\n    }\n  }\n\n  removeReason(reason, criteria = {}) {\n    return this.store.removeReason(reason, criteria, (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n  }\n\n  byId(id) {\n    return this.store.byId(id)\n  }\n}\n","export function isFirstOlder(firstMeta, secondMeta) {\n  if (firstMeta && !secondMeta) {\n    return false\n  } else if (!firstMeta && secondMeta) {\n    return true\n  }\n\n  if (firstMeta.time > secondMeta.time) {\n    return false\n  } else if (firstMeta.time < secondMeta.time) {\n    return true\n  }\n\n  let first = firstMeta.id.split(' ')\n  let second = secondMeta.id.split(' ')\n\n  let firstNode = first[1]\n  let secondNode = second[1]\n  if (firstNode > secondNode) {\n    return false\n  } else if (firstNode < secondNode) {\n    return true\n  }\n\n  let firstCounter = parseInt(first[2])\n  let secondCounter = parseInt(second[2])\n  if (firstCounter > secondCounter) {\n    return false\n  } else if (firstCounter < secondCounter) {\n    return true\n  }\n\n  let firstNodeTime = parseInt(first[0])\n  let secondNodeTime = parseInt(second[0])\n  if (firstNodeTime > secondNodeTime) {\n    return false\n  } else if (firstNodeTime < secondNodeTime) {\n    return true\n  }\n\n  return false\n}\n","import { createNanoEvents } from 'nanoevents'\n\nexport class WsConnection {\n  constructor(url, Class, opts) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    if (Class) {\n      this.Class = Class\n    } else if (typeof WebSocket !== 'undefined') {\n      this.Class = WebSocket\n    } else {\n      throw new Error('No WebSocket support')\n    }\n    this.url = url\n    this.opts = opts\n  }\n\n  init(ws) {\n    ws.onerror = event => {\n      this.emitter.emit('error', event.error || new Error('WS Error'))\n    }\n\n    ws.onclose = () => {\n      this.onclose()\n    }\n\n    ws.onmessage = event => {\n      let data\n      try {\n        data = JSON.parse(event.data)\n      } catch {\n        this.error(event.data)\n        return\n      }\n      this.emitter.emit('message', data)\n    }\n\n    this.ws = ws\n  }\n\n  connect() {\n    if (this.ws) return Promise.resolve()\n\n    this.emitter.emit('connecting')\n    this.init(new this.Class(this.url, undefined, this.opts))\n\n    return new Promise(resolve => {\n      this.ws.onopen = () => {\n        this.connected = true\n        this.emitter.emit('connect')\n        resolve()\n      }\n    })\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.onclose = undefined\n      this.ws.close()\n      this.onclose()\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  send(message) {\n    if (this.ws && this.ws.readyState === this.ws.OPEN) {\n      this.ws.send(JSON.stringify(message))\n    } else {\n      this.emitter.emit('error', new Error('WS was closed'))\n    }\n  }\n\n  error(message) {\n    let err = new Error('Wrong message format')\n    err.received = message\n    this.emitter.emit('error', err)\n  }\n\n  onclose() {\n    if (this.ws) {\n      this.connected = false\n      this.emitter.emit('disconnect')\n      this.ws = undefined\n    }\n  }\n}\n","import { isFirstOlder } from '../is-first-older/index.js'\n\nfunction checkIndex(store, index) {\n  if (!store.indexes[index]) {\n    store.indexes[index] = { added: [], entries: [] }\n  }\n}\n\nfunction forEachIndex(meta, cb) {\n  let indexes = meta.indexes\n  if (isDefined(indexes) && indexes.length > 0) {\n    for (let index of indexes) {\n      cb(index)\n    }\n  }\n}\n\nfunction insert(store, entry) {\n  store.lastAdded += 1\n  entry[1].added = store.lastAdded\n  store.added.push(entry)\n  forEachIndex(entry[1], index => {\n    checkIndex(store, index)\n    store.indexes[index].added.push(entry)\n  })\n  return Promise.resolve(entry[1])\n}\n\nfunction eject(store, meta) {\n  let added = meta.added\n  let start = 0\n  let end = store.added.length - 1\n  while (start <= end) {\n    let middle = (end + start) >> 1\n    let otherAdded = store.added[middle][1].added\n    if (otherAdded < added) {\n      start = middle + 1\n    } else if (otherAdded > added) {\n      end = middle - 1\n    } else {\n      store.added.splice(middle, 1)\n      break\n    }\n  }\n}\n\nfunction find(list, id) {\n  for (let i = list.length - 1; i >= 0; i--) {\n    if (id === list[i][1].id) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined'\n}\n\nexport class MemoryStore {\n  constructor() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async add(action, meta) {\n    let entry = [action, meta]\n    let id = meta.id\n\n    let list = this.entries\n    for (let i = 0; i < list.length; i++) {\n      let [, otherMeta] = list[i]\n      if (id === otherMeta.id) {\n        return false\n      } else if (!isFirstOlder(otherMeta, meta)) {\n        forEachIndex(meta, index => {\n          checkIndex(this, index)\n          let indexList = this.indexes[index].entries\n          let j = indexList.findIndex(item => !isFirstOlder(item[1], meta))\n          indexList.splice(j, 0, entry)\n        })\n        list.splice(i, 0, entry)\n        return insert(this, entry)\n      }\n    }\n\n    forEachIndex(meta, index => {\n      checkIndex(this, index)\n      this.indexes[index].entries.push(entry)\n    })\n    list.push(entry)\n    return insert(this, entry)\n  }\n\n  async byId(id) {\n    let created = find(this.entries, id)\n    if (created === -1) {\n      return [null, null]\n    } else {\n      let [action, meta] = this.entries[created]\n      return [action, meta]\n    }\n  }\n\n  async remove(id, created) {\n    if (typeof created === 'undefined') {\n      created = find(this.entries, id)\n      if (created === -1) return Promise.resolve(false)\n    }\n\n    let entry = [this.entries[created][0], this.entries[created][1]]\n    forEachIndex(entry[1], index => {\n      let entries = this.indexes[index].entries\n      let indexed = find(entries, id)\n      if (indexed !== -1) entries.splice(indexed, 1)\n    })\n    this.entries.splice(created, 1)\n\n    forEachIndex(entry[1], index => {\n      eject(this.indexes[index], entry[1])\n    })\n    eject(this, entry[1])\n\n    return entry\n  }\n\n  async get(opts = {}) {\n    let index = opts.index\n    let store = this\n    let entries\n    if (index) {\n      store = this.indexes[index] || { added: [], entries: [] }\n    }\n    if (opts.order === 'created') {\n      entries = store.entries\n    } else {\n      entries = store.added\n    }\n    return { entries: entries.slice(0) }\n  }\n\n  async changeMeta(id, diff) {\n    let index = find(this.entries, id)\n    if (index === -1) {\n      return false\n    } else {\n      let meta = this.entries[index][1]\n      for (let key in diff) meta[key] = diff[key]\n      return true\n    }\n  }\n\n  async removeReason(reason, criteria, callback) {\n    let removed = []\n\n    if (criteria.id) {\n      let index = find(this.entries, criteria.id)\n      if (index !== -1) {\n        let meta = this.entries[index][1]\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos !== -1) {\n          meta.reasons.splice(reasonPos, 1)\n          if (meta.reasons.length === 0) {\n            callback(this.entries[index][0], meta)\n            this.remove(criteria.id)\n          }\n        }\n      }\n    } else {\n      this.entries = this.entries.filter(([action, meta]) => {\n        let c = criteria\n\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos === -1) {\n          return true\n        }\n        if (isDefined(c.olderThan) && !isFirstOlder(meta, c.olderThan)) {\n          return true\n        }\n        if (isDefined(c.youngerThan) && !isFirstOlder(c.youngerThan, meta)) {\n          return true\n        }\n        if (isDefined(c.minAdded) && meta.added < c.minAdded) {\n          return true\n        }\n        if (isDefined(c.maxAdded) && meta.added > c.maxAdded) {\n          return true\n        }\n\n        meta.reasons.splice(reasonPos, 1)\n        if (meta.reasons.length === 0) {\n          callback(action, meta)\n          removed.push(meta)\n          return false\n        } else {\n          return true\n        }\n      })\n\n      let removedAdded = removed.map(m => m.added)\n      let removing = i => !removedAdded.includes(i[1].added)\n      this.added = this.added.filter(removing)\n\n      for (let meta of removed) {\n        forEachIndex(meta, i => {\n          this.indexes[i].entries = this.indexes[i].entries.filter(removing)\n          this.indexes[i].added = this.indexes[i].added.filter(removing)\n        })\n      }\n    }\n  }\n\n  async clean() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async getLastAdded() {\n    return this.lastAdded\n  }\n\n  async getLastSynced() {\n    return {\n      received: this.lastReceived,\n      sent: this.lastSent\n    }\n  }\n\n  async setLastSynced(values) {\n    if (typeof values.sent !== 'undefined') {\n      this.lastSent = values.sent\n    }\n    if (typeof values.received !== 'undefined') {\n      this.lastReceived = values.received\n    }\n  }\n}\n","export class LoguxError extends Error {\n  static describe(type, options) {\n    if (type === 'timeout') {\n      return 'A timeout was reached (' + options + ' ms)'\n    } else if (type === 'wrong-format') {\n      return 'Wrong message format in ' + options\n    } else if (type === 'unknown-message') {\n      return 'Unknown message `' + options + '` type'\n    } else if (type === 'bruteforce') {\n      return 'Too many wrong authentication attempts'\n    } else if (type === 'wrong-protocol') {\n      return (\n        `Logux supports protocols only from version ${options.supported}` +\n        `, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-subprotocol') {\n      return (\n        `Only ${options.supported} application subprotocols are ` +\n        `supported, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-credentials') {\n      return 'Wrong credentials'\n    } else {\n      return type\n    }\n  }\n\n  constructor(type, options, received) {\n    super(type)\n    this.name = 'LoguxError'\n    this.type = type\n    this.options = options\n    this.description = LoguxError.describe(type, options)\n    this.received = !!received\n\n    if (received) {\n      this.message = 'Logux received ' + this.type + ' error'\n      if (this.description !== this.type) {\n        this.message += ' (' + this.description + ')'\n      }\n    } else {\n      this.message = this.description\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, LoguxError)\n    }\n  }\n}\n","import { LoguxError } from '../logux-error/index.js'\n\nasync function auth(node, nodeId, token, callback) {\n  if (!node.options.auth) {\n    node.authenticated = true\n    callback()\n    return\n  }\n\n  try {\n    let access = await node.options.auth(nodeId, token, node.remoteHeaders)\n    if (access) {\n      node.authenticated = true\n      callback()\n      for (let i = 0; i < node.unauthenticated.length; i++) {\n        node.onMessage(node.unauthenticated[i])\n      }\n      node.unauthenticated = []\n    } else {\n      node.sendError(new LoguxError('wrong-credentials'))\n      node.destroy()\n    }\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      node.destroy()\n    } else {\n      node.error(e)\n    }\n  }\n}\n\nfunction checkProtocol(node, ver) {\n  node.remoteProtocol = ver\n\n  if (ver >= node.minProtocol) {\n    return true\n  } else {\n    node.sendError(\n      new LoguxError('wrong-protocol', {\n        supported: node.minProtocol,\n        used: ver\n      })\n    )\n    node.destroy()\n    return false\n  }\n}\n\nfunction emitEvent(node) {\n  try {\n    node.emitter.emit('connect')\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      return false\n    } else {\n      throw e\n    }\n  }\n  return true\n}\n\nexport async function sendConnect() {\n  let message = [\n    'connect',\n    this.localProtocol,\n    this.localNodeId,\n    this.lastReceived\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (this.options.fixTime) this.connectSended = this.now()\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.startTimeout()\n  this.send(message)\n}\n\nexport async function sendConnected(start, end) {\n  let message = [\n    'connected',\n    this.localProtocol,\n    this.localNodeId,\n    [start, end]\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.send(message)\n}\n\nexport function connectMessage(ver, nodeId, synced, options) {\n  let start = this.now()\n  if (!options) options = {}\n\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.baseTime = this.now()\n    this.sendConnected(start, this.baseTime)\n    this.syncSince(synced)\n  })\n}\n\nexport function connectedMessage(ver, nodeId, time, options) {\n  if (!options) options = {}\n\n  this.endTimeout()\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.baseTime = time[1]\n\n  if (this.options.fixTime) {\n    let now = this.now()\n    let authTime = time[1] - time[0]\n    let roundTrip = now - this.connectSended - authTime\n    this.timeFix = Math.floor(this.connectSended - time[0] + roundTrip / 2)\n  }\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.syncSince(this.lastSent)\n  })\n}\n","import { createNanoEvents } from 'nanoevents'\n\nimport {\n  sendConnect,\n  sendConnected,\n  connectMessage,\n  connectedMessage\n} from '../connect/index.js'\nimport {\n  syncedMessage,\n  syncMessage,\n  sendSynced,\n  sendSync\n} from '../sync/index.js'\nimport { sendPing, pingMessage, pongMessage } from '../ping/index.js'\nimport { sendHeaders, headersMessage } from '../headers/index.js'\nimport { sendDebug, debugMessage } from '../debug/index.js'\nimport { sendError, errorMessage } from '../error/index.js'\nimport { LoguxError } from '../logux-error/index.js'\n\nconst NOT_TO_THROW = {\n  'wrong-subprotocol': true,\n  'wrong-protocol': true,\n  'timeout': true\n}\n\nconst BEFORE_AUTH = ['connect', 'connected', 'error', 'debug', 'headers']\n\nasync function syncMappedEvent(node, action, meta) {\n  let added = meta.added\n  if (typeof added === 'undefined') {\n    let lastAdded = node.lastAddedCache\n    added = lastAdded > node.lastSent ? lastAdded : node.lastSent\n  }\n  if (node.options.outMap) {\n    try {\n      let changed = await node.options.outMap(action, meta)\n      node.sendSync(added, [changed])\n    } catch (e) {\n      node.error(e)\n    }\n  } else {\n    node.sendSync(added, [[action, meta]])\n  }\n}\n\nexport class BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    this.remoteNodeId = undefined\n    this.remoteProtocol = undefined\n    this.remoteSubprotocol = undefined\n\n    this.minProtocol = 3\n    this.localProtocol = 4\n    this.localNodeId = nodeId\n\n    this.log = log\n    this.connection = connection\n    this.options = options\n\n    if (this.options.ping && !this.options.timeout) {\n      throw new Error('You must set timeout option to use ping')\n    }\n\n    this.connected = false\n    this.authenticated = false\n    this.unauthenticated = []\n\n    this.timeFix = 0\n    this.syncing = 0\n    this.received = {}\n\n    this.lastSent = 0\n    this.lastReceived = 0\n\n    this.state = 'disconnected'\n\n    this.emitter = createNanoEvents()\n    this.timeouts = []\n    this.throwsError = true\n\n    this.unbind = [\n      log.on('add', (action, meta) => {\n        this.onAdd(action, meta)\n      }),\n      connection.on('connecting', () => {\n        this.onConnecting()\n      }),\n      connection.on('connect', () => {\n        this.onConnect()\n      }),\n      connection.on('message', message => {\n        this.onMessage(message)\n      }),\n      connection.on('error', error => {\n        if (error.message === 'Wrong message format') {\n          this.sendError(new LoguxError('wrong-format', error.received))\n          this.connection.disconnect('error')\n        } else {\n          this.error(error)\n        }\n      }),\n      connection.on('disconnect', () => {\n        this.onDisconnect()\n      })\n    ]\n\n    this.initialized = false\n    this.lastAddedCache = 0\n    this.initializing = this.initialize()\n    this.localHeaders = {}\n    this.remoteHeaders = {}\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  catch(listener) {\n    this.throwsError = false\n    let unbind = this.on('error', listener)\n    return () => {\n      this.throwsError = true\n      unbind()\n    }\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    if (this.connection.destroy) {\n      this.connection.destroy()\n    } else if (this.connected) {\n      this.connection.disconnect('destroy')\n    }\n    for (let i of this.unbind) i()\n    clearTimeout(this.pingTimeout)\n    this.endTimeout()\n  }\n\n  setLocalHeaders(headers) {\n    this.localHeaders = headers\n    if (this.connected) {\n      this.sendHeaders(headers)\n    }\n  }\n\n  send(msg) {\n    if (!this.connected) return\n    this.delayPing()\n    try {\n      this.connection.send(msg)\n    } catch (e) {\n      this.error(e)\n    }\n  }\n\n  onConnecting() {\n    this.setState('connecting')\n  }\n\n  onConnect() {\n    this.delayPing()\n    this.connected = true\n  }\n\n  onDisconnect() {\n    while (this.timeouts.length > 0) {\n      this.endTimeout()\n    }\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n    this.authenticated = false\n    this.connected = false\n    this.setState('disconnected')\n  }\n\n  onMessage(msg) {\n    this.delayPing()\n    let name = msg[0]\n\n    if (!this.authenticated && !BEFORE_AUTH.includes(name)) {\n      this.unauthenticated.push(msg)\n      return\n    }\n\n    this[name + 'Message'](...msg.slice(1))\n  }\n\n  async onAdd(action, meta) {\n    if (!this.authenticated) return\n    if (this.lastAddedCache < meta.added) {\n      this.lastAddedCache = meta.added\n    }\n\n    if (this.received && this.received[meta.id]) {\n      delete this.received[meta.id]\n      return\n    }\n\n    if (this.options.outFilter) {\n      try {\n        let result = await this.options.outFilter(action, meta)\n        if (result) syncMappedEvent(this, action, meta)\n      } catch (e) {\n        this.error(e)\n      }\n    } else {\n      syncMappedEvent(this, action, meta)\n    }\n  }\n\n  syncError(type, options, received) {\n    let err = new LoguxError(type, options, received)\n    this.emitter.emit('error', err)\n    if (!NOT_TO_THROW[type] && this.throwsError) {\n      throw err\n    }\n  }\n\n  error(err) {\n    this.emitter.emit('error', err)\n    this.connection.disconnect('error')\n    if (this.throwsError) {\n      throw err\n    }\n  }\n\n  setState(state) {\n    if (this.state !== state) {\n      this.state = state\n      this.emitter.emit('state')\n    }\n  }\n\n  startTimeout() {\n    if (!this.options.timeout) return\n\n    let ms = this.options.timeout\n    let timeout = setTimeout(() => {\n      if (this.connected) this.connection.disconnect('timeout')\n      this.syncError('timeout', ms)\n    }, ms)\n\n    this.timeouts.push(timeout)\n  }\n\n  endTimeout() {\n    if (this.timeouts.length > 0) {\n      clearTimeout(this.timeouts.shift())\n    }\n  }\n\n  delayPing() {\n    if (!this.options.ping) return\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n\n    this.pingTimeout = setTimeout(() => {\n      if (this.connected && this.authenticated) this.sendPing()\n    }, this.options.ping)\n  }\n\n  async syncSinceQuery(lastSynced) {\n    let promises = []\n    await this.log.each({ order: 'added' }, (action, meta) => {\n      if (meta.added <= lastSynced) return false\n      if (this.options.outFilter) {\n        promises.push(\n          this.options\n            .outFilter(action, meta)\n            .then(r => {\n              if (r) {\n                return [action, meta]\n              } else {\n                return false\n              }\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        )\n      } else {\n        promises.push(Promise.resolve([action, meta]))\n      }\n      return true\n    })\n\n    let entries = await Promise.all(promises)\n\n    let data = { added: 0 }\n    data.entries = entries.filter(entry => {\n      if (entry && data.added < entry[1].added) {\n        data.added = entry[1].added\n      }\n      return entry !== false\n    })\n    return data\n  }\n\n  async syncSince(lastSynced) {\n    let data = await this.syncSinceQuery(lastSynced)\n    if (!this.connected) return\n    if (data.entries.length > 0) {\n      if (this.options.outMap) {\n        Promise.all(\n          data.entries.map(i => {\n            return this.options.outMap(i[0], i[1])\n          })\n        )\n          .then(changed => {\n            this.sendSync(data.added, changed)\n          })\n          .catch(e => {\n            this.error(e)\n          })\n      } else {\n        this.sendSync(data.added, data.entries)\n      }\n    } else {\n      this.setState('synchronized')\n    }\n  }\n\n  setLastSent(value) {\n    if (this.lastSent < value) {\n      this.lastSent = value\n      this.log.store.setLastSynced({ sent: value })\n    }\n  }\n\n  setLastReceived(value) {\n    if (this.lastReceived < value) this.lastReceived = value\n    this.log.store.setLastSynced({ received: value })\n  }\n\n  now() {\n    return Date.now()\n  }\n\n  async initialize() {\n    let [synced, added] = await Promise.all([\n      this.log.store.getLastSynced(),\n      this.log.store.getLastAdded()\n    ])\n    this.initialized = true\n    this.lastSent = synced.sent\n    this.lastReceived = synced.received\n    this.lastAddedCache = added\n    if (this.connection.connected) this.onConnect()\n  }\n\n  sendDuilian() {\n    this.send(['duilian', Object.keys(DUILIANS)[0]])\n  }\n\n  duilianMessage(line) {\n    if (DUILIANS[line]) {\n      this.send(['duilian', DUILIANS[line]])\n    }\n  }\n}\n\nBaseNode.prototype.sendConnect = sendConnect\nBaseNode.prototype.sendConnected = sendConnected\nBaseNode.prototype.connectMessage = connectMessage\nBaseNode.prototype.connectedMessage = connectedMessage\n\nBaseNode.prototype.sendSync = sendSync\nBaseNode.prototype.sendSynced = sendSynced\nBaseNode.prototype.syncMessage = syncMessage\nBaseNode.prototype.syncedMessage = syncedMessage\n\nBaseNode.prototype.sendPing = sendPing\nBaseNode.prototype.pingMessage = pingMessage\nBaseNode.prototype.pongMessage = pongMessage\n\nBaseNode.prototype.sendDebug = sendDebug\nBaseNode.prototype.debugMessage = debugMessage\n\nBaseNode.prototype.sendError = sendError\nBaseNode.prototype.errorMessage = errorMessage\n\nBaseNode.prototype.sendHeaders = sendHeaders\nBaseNode.prototype.headersMessage = headersMessage\n\nconst DUILIANS = {\n  金木水火土: '板城烧锅酒'\n}\n","export function sendSync(added, entries) {\n  this.startTimeout()\n\n  let data = []\n  for (let [action, originMeta] of entries) {\n    let meta = {}\n    for (let key in originMeta) {\n      if (key === 'id') {\n        meta.id = originMeta.id.split(' ')\n      } else if (key !== 'added') {\n        meta[key] = originMeta[key]\n      }\n    }\n\n    if (this.timeFix) meta.time -= this.timeFix\n    meta.id[0] = parseInt(meta.id[0]) - this.baseTime\n    meta.id[2] = parseInt(meta.id[2])\n    meta.time -= this.baseTime\n\n    if (meta.id[1] === this.localNodeId) {\n      if (meta.id[2] === 0) {\n        meta.id = meta.id[0]\n      } else {\n        meta.id = [meta.id[0], meta.id[2]]\n      }\n    }\n\n    data.unshift(action, meta)\n  }\n\n  this.syncing += 1\n  this.setState('sending')\n  this.send(['sync', added].concat(data))\n}\n\nexport function sendSynced(added) {\n  this.send(['synced', added])\n}\n\nexport async function syncMessage(added, ...data) {\n  let promises = []\n\n  for (let i = 0; i < data.length - 1; i += 2) {\n    let action = data[i]\n    let meta = data[i + 1]\n\n    if (typeof meta.id === 'number') {\n      meta.id = meta.id + this.baseTime + ' ' + this.remoteNodeId + ' ' + 0\n    } else {\n      meta.id[0] = meta.id[0] + this.baseTime\n      if (meta.id.length === 2) {\n        meta.id = meta.id[0] + ' ' + this.remoteNodeId + ' ' + meta.id[1]\n      } else {\n        meta.id = meta.id.join(' ')\n      }\n    }\n\n    meta.time = meta.time + this.baseTime\n    if (this.timeFix) meta.time = meta.time + this.timeFix\n\n    let process = Promise.resolve([action, meta])\n\n    if (this.options.inMap) {\n      process = process\n        .then(([action2, meta2]) => {\n          return this.options.inMap(action2, meta2)\n        })\n        .catch(e => {\n          this.error(e)\n        })\n    }\n\n    process\n      .then(filtered => {\n        if (filtered && this.options.inFilter) {\n          return this.options\n            .inFilter(...filtered)\n            .then(res => {\n              return res ? filtered : false\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        } else {\n          return filtered\n        }\n      })\n      .then(changed => {\n        if (!changed) return false\n        if (this.received) this.received[changed[1].id] = true\n        return this.log.add(changed[0], changed[1])\n      })\n\n    promises.push(process)\n  }\n\n  await Promise.all(promises)\n  this.setLastReceived(added)\n  this.sendSynced(added)\n}\n\nexport function syncedMessage(synced) {\n  this.endTimeout()\n  this.setLastSent(synced)\n  if (this.syncing > 0) this.syncing -= 1\n  if (this.syncing === 0) {\n    this.setState('synchronized')\n  }\n}\n","export function sendPing() {\n  this.startTimeout()\n  this.send(['ping', this.lastAddedCache])\n  if (this.pingTimeout) clearTimeout(this.pingTimeout)\n}\n\nexport function pingMessage(synced) {\n  this.setLastReceived(synced)\n  if (this.connected && this.authenticated) {\n    this.send(['pong', this.lastAddedCache])\n  }\n}\n\nexport function pongMessage(synced) {\n  this.setLastReceived(synced)\n  this.endTimeout()\n}\n","export function sendDebug(type, data) {\n  this.send(['debug', type, data])\n}\n\nexport function debugMessage(type, data) {\n  this.emitter.emit('debug', type, data)\n}\n","export function sendError(error) {\n  let message = ['error', error.type]\n  if (typeof error.options !== 'undefined') message.push(error.options)\n  this.send(message)\n\n  this.emitter.emit('clientError', error)\n}\n\nexport function errorMessage(type, options) {\n  this.syncError(type, options, true)\n}\n","export function sendHeaders(data) {\n  this.send(['headers', data])\n}\n\nexport function headersMessage(data) {\n  this.remoteHeaders = data\n  this.emitter.emit('headers', data)\n}\n","import { BaseNode } from '../base-node/index.js'\n\nconst DEFAULT_OPTIONS = {\n  fixTime: true,\n  timeout: 20000,\n  ping: 5000\n}\n\nexport class ClientNode extends BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    options = { ...DEFAULT_OPTIONS, ...options }\n    super(nodeId, log, connection, options)\n  }\n\n  onConnect() {\n    if (!this.connected) {\n      this.connected = true\n      this.initializing = this.initializing.then(() => {\n        if (this.connected) this.sendConnect()\n      })\n    }\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\n\nclass LocalConnection {\n  constructor(pair, type) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    this.type = type\n    this.pair = pair\n  }\n\n  other() {\n    if (this.type === 'left') {\n      return this.pair.right\n    } else {\n      return this.pair.left\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  connect() {\n    if (this.connected) {\n      throw new Error('Connection already established')\n    } else {\n      this.emitter.emit('connecting')\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = true\n          this.connected = true\n          this.other().emitter.emit('connect')\n          this.emitter.emit('connect')\n          resolve()\n        }, this.pair.delay)\n      })\n    }\n  }\n\n  disconnect(reason) {\n    if (!this.connected) {\n      throw new Error('Connection already finished')\n    } else {\n      this.connected = false\n      this.emitter.emit('disconnect', reason)\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = false\n          this.other().emitter.emit('disconnect')\n          resolve()\n        }, 1)\n      })\n    }\n  }\n\n  send(message) {\n    if (this.connected) {\n      setTimeout(() => {\n        this.other().emitter.emit('message', message)\n      }, this.pair.delay)\n    } else {\n      throw new Error('Connection should be started before sending a message')\n    }\n  }\n}\n\nexport class LocalPair {\n  constructor(delay = 1) {\n    this.delay = delay\n    this.left = new LocalConnection(this, 'left')\n    this.right = new LocalConnection(this, 'right')\n  }\n}\n","const DEFAULT_OPTIONS = {\n  minDelay: 1000,\n  maxDelay: 5000,\n  attempts: Infinity\n}\n\nconst FATAL_ERRORS = [\n  'wrong-protocol',\n  'wrong-subprotocol',\n  'wrong-credentials'\n]\n\nexport class Reconnect {\n  constructor(connection, options = {}) {\n    this.connection = connection\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n\n    this.reconnecting = connection.connected\n    this.connecting = false\n    this.attempts = 0\n\n    this.unbind = [\n      this.connection.on('message', msg => {\n        if (msg[0] === 'error' && FATAL_ERRORS.includes(msg[1])) {\n          this.reconnecting = false\n        }\n      }),\n      this.connection.on('connecting', () => {\n        this.connecting = true\n      }),\n      this.connection.on('connect', () => {\n        this.attempts = 0\n        this.connecting = false\n      }),\n      this.connection.on('disconnect', () => {\n        this.connecting = false\n        if (this.reconnecting) this.reconnect()\n      }),\n      () => {\n        clearTimeout(this.timer)\n      }\n    ]\n\n    let visibility = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (typeof document !== 'undefined' && !document.hidden) this.connect()\n      }\n    }\n    let connect = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (navigator.onLine) this.connect()\n      }\n    }\n    let disconnect = () => {\n      this.disconnect('freeze')\n    }\n    if (\n      typeof document !== 'undefined' &&\n      typeof window !== 'undefined' &&\n      document.addEventListener &&\n      window.addEventListener\n    ) {\n      document.addEventListener('visibilitychange', visibility, false)\n      window.addEventListener('focus', connect, false)\n      window.addEventListener('online', connect, false)\n      window.addEventListener('resume', connect, false)\n      window.addEventListener('freeze', disconnect, false)\n      this.unbind.push(() => {\n        document.removeEventListener('visibilitychange', visibility, false)\n        window.removeEventListener('focus', connect, false)\n        window.removeEventListener('online', connect, false)\n        window.removeEventListener('resume', connect, false)\n        window.removeEventListener('freeze', disconnect, false)\n      })\n    }\n  }\n\n  connect() {\n    this.attempts += 1\n    this.reconnecting = true\n    return this.connection.connect()\n  }\n\n  disconnect(reason) {\n    if (reason !== 'timeout' && reason !== 'error' && reason !== 'freeze') {\n      this.reconnecting = false\n    }\n    return this.connection.disconnect(reason)\n  }\n\n  destroy() {\n    for (let i of this.unbind) i()\n    this.disconnect('destroy')\n  }\n\n  reconnect() {\n    if (this.attempts > this.options.attempts - 1) {\n      this.reconnecting = false\n      this.attempts = 0\n      return\n    }\n\n    let delay = this.nextDelay()\n    this.timer = setTimeout(() => {\n      if (this.reconnecting && !this.connecting && !this.connected) {\n        this.connect()\n      }\n    }, delay)\n  }\n\n  send(...args) {\n    return this.connection.send(...args)\n  }\n\n  on(...args) {\n    return this.connection.on(...args)\n  }\n\n  nextDelay() {\n    let base = this.options.minDelay * 2 ** this.attempts\n    let rand = Math.random()\n    let deviation = rand * 0.5 * base\n    if (Math.floor(rand * 10) === 1) deviation = -deviation\n    return Math.min(base + deviation, this.options.maxDelay) || 0\n  }\n\n  get connected() {\n    return this.connection.connected\n  }\n\n  get emitter() {\n    return this.connection.emitter\n  }\n}\n","export function parseId(nodeId) {\n  if (nodeId.includes(' ')) nodeId = nodeId.split(' ')[1]\n  let parts = nodeId.split(':')\n  if (parts.length === 1) {\n    return { nodeId, userId: undefined, clientId: nodeId }\n  } else {\n    let userId = parts[0]\n    return { nodeId, userId, clientId: parts[0] + ':' + parts[1] }\n  }\n}\n","export function status(client, callback, options = {}) {\n  let observable = client.on ? client : client.node\n  let disconnected = observable.state === 'disconnected'\n  let wait = false\n  let old = false\n\n  if (typeof options.duration === 'undefined') options.duration = 3000\n\n  let timeout\n  let unbind = []\n  let processing = {}\n\n  function setSynchronized() {\n    if (Object.keys(processing).length === 0) {\n      if (wait) {\n        wait = false\n        callback('synchronizedAfterWait')\n        timeout = setTimeout(() => {\n          callback('synchronized')\n        }, options.duration)\n      } else {\n        callback('synchronized')\n      }\n    }\n  }\n\n  function changeState() {\n    clearTimeout(timeout)\n\n    if (old) return\n    if (observable.state === 'disconnected') {\n      disconnected = true\n      callback(wait ? 'wait' : 'disconnected')\n    } else if (observable.state === 'synchronized') {\n      disconnected = false\n      setSynchronized()\n    } else if (observable.state === 'connecting') {\n      timeout = setTimeout(() => {\n        callback('connecting' + (wait ? 'AfterWait' : ''))\n      }, 100)\n    } else {\n      callback(client.state + (wait ? 'AfterWait' : ''))\n    }\n  }\n\n  unbind.push(observable.on('state', changeState))\n\n  unbind.push(\n    client.node.on('error', error => {\n      if (\n        error.type === 'wrong-protocol' ||\n        error.type === 'wrong-subprotocol'\n      ) {\n        old = true\n        callback('protocolError')\n      } else if (error.type !== 'timeout') {\n        callback('syncError', { error })\n      }\n    })\n  )\n\n  unbind.push(\n    client.node.on('clientError', error => {\n      callback('syncError', { error })\n    })\n  )\n\n  let log = client.on ? client : client.log\n  unbind.push(\n    log.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n\n      if (action.type === 'logux/processed') {\n        delete processing[action.id]\n        setSynchronized()\n      } else if (action.type === 'logux/undo') {\n        delete processing[action.id]\n      } else if (meta.sync) {\n        processing[meta.id] = true\n      }\n\n      if (action.type === 'logux/undo' && action.reason) {\n        if (action.reason === 'denied') {\n          callback('denied', { action, meta })\n        } else {\n          callback('error', { action, meta })\n        }\n      } else if (disconnected && meta.sync && meta.added) {\n        if (!wait) callback('wait')\n        wait = true\n      }\n    })\n  )\n\n  changeState()\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { status } from '../status/index.js'\n\nfunction injectStyles(element, styles) {\n  for (let i in styles) {\n    element.style[i] = styles[i]\n  }\n}\n\nfunction setPosition(element, position) {\n  let style = element.style\n  if (position === 'middle-center' || position === 'center-middle') {\n    style.top = '50%'\n    style.left = '50%'\n    style.transform = 'translate(-50%, -50%)'\n  } else {\n    position.split('-').forEach(pos => {\n      if (pos === 'middle') {\n        style.top = '50%'\n        style.transform = 'translateY(-50%)'\n      } else if (pos === 'center') {\n        style.left = '50%'\n        style.transform = 'translateX(-50%)'\n      } else {\n        style[pos] = '0'\n      }\n    })\n  }\n}\n\nconst RESET = {\n  boxSizing: 'content-box',\n  visibility: 'visible',\n  textIndent: '0',\n  textTransform: 'none',\n  wordSpacing: 'normal',\n  letterSpacing: 'normal',\n  fontStyle: 'normal',\n  fontVariant: 'normal',\n  fontWeight: 'normal',\n  lineHeight: 'auto'\n}\n\nexport function badge(client, opts) {\n  let messages = opts.messages\n  let position = opts.position || 'bottom-right'\n  let styles = opts.styles\n\n  let widget = document.createElement('div')\n  let text = document.createElement('span')\n\n  widget.setAttribute('role', 'alert')\n\n  injectStyles(widget, RESET)\n  injectStyles(widget, styles.base)\n  injectStyles(text, styles.text)\n  setPosition(widget, position)\n\n  let show = (style, msg) => {\n    text.innerHTML = msg\n    injectStyles(widget, style)\n    widget.style.display = 'block'\n  }\n\n  let hide = () => {\n    widget.style.display = 'none'\n  }\n\n  let unbind = status(\n    client,\n    state => {\n      if (state === 'sendingAfterWait' || state === 'connectingAfterWait') {\n        show(styles.sending, messages.sending)\n      } else if (state === 'synchronizedAfterWait') {\n        show(styles.synchronized, messages.synchronized)\n      } else if (state === 'synchronized') {\n        hide(widget)\n      } else if (state === 'disconnected') {\n        show(styles.disconnected, messages.disconnected)\n      } else if (state === 'wait') {\n        show(styles.wait, messages.wait)\n      } else if (state === 'protocolError') {\n        show(styles.protocolError, messages.protocolError)\n      } else if (state === 'syncError') {\n        show(styles.error, messages.syncError)\n      } else if (state === 'error') {\n        show(styles.error, messages.error)\n      } else if (state === 'denied') {\n        show(styles.error, messages.denied)\n      }\n    },\n    opts\n  )\n\n  widget.appendChild(text)\n  document.body.appendChild(widget)\n\n  return () => {\n    unbind()\n    document.body.removeChild(widget)\n  }\n}\n\nexport let badgeRu = {\n  synchronized: 'Ваши данные сохранены',\n  disconnected: 'Нет интернета',\n  wait: 'Нет интернета<br>Ваши данные не сохранены',\n  sending: 'Сохраняю ваши данные',\n  syncError: 'Ошибка на сервере<br>Ваши данные не сохранены',\n  error: 'Ошибка на сервере<br>Ваши действия отменены',\n  denied: 'Нет прав<br>Ваши действия отменены',\n  protocolError: 'Сохранение не работает<br>Обновите страницу'\n}\n\nexport let badgeEn = {\n  synchronized: 'Your data has been saved',\n  disconnected: 'No Internet connection',\n  wait: 'No Internet connection<br>Your data has not been saved',\n  sending: 'Data saving',\n  syncError: 'Server error<br>Your data has not been saved',\n  error: 'Server error<br>You changes was reverted',\n  denied: 'You have no access<br>You changes was reverted',\n  protocolError: 'Saving is not working<br>Refresh the page'\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export class LoguxUndoError extends Error {\n  constructor(action) {\n    let type = action.action ? action.action.type : 'action'\n    super(`Server undid ${type} because of ${action.reason}`)\n    this.name = 'LoguxUndoError'\n    this.action = action\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\nimport {\n  isFirstOlder,\n  WsConnection,\n  MemoryStore,\n  ClientNode,\n  Reconnect,\n  parseId,\n  Log\n} from '@logux/core'\nimport { nanoid } from 'nanoid'\n\nimport { LoguxUndoError } from '../logux-undo-error/index.js'\nimport { track } from '../track/index.js'\n\nlet ALLOWED_META = ['id', 'time', 'subprotocol']\n\nfunction tabPing(c) {\n  localStorage.setItem(c.options.prefix + ':tab:' + c.tabId, Date.now())\n}\n\nfunction cleanTabActions(client, id) {\n  client.log.removeReason('tab' + id).then(() => {\n    if (client.isLocalStorage) {\n      localStorage.removeItem(client.options.prefix + ':tab:' + id)\n    }\n  })\n}\n\nexport class Client {\n  constructor(opts = {}) {\n    this.options = opts\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof this.options.server === 'undefined') {\n        throw new Error('Missed server option in Logux client')\n      }\n      if (typeof this.options.subprotocol === 'undefined') {\n        throw new Error('Missed subprotocol option in Logux client')\n      }\n      if (typeof this.options.userId === 'undefined') {\n        throw new Error(\n          'Missed userId option in Logux client. ' +\n            'Pass false if you have no users.'\n        )\n      }\n      if (this.options.userId === false) {\n        throw new Error('Replace userId: false to userId: \"false\"')\n      }\n      if (typeof this.options.userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (this.options.userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    if (typeof this.options.prefix === 'undefined') {\n      this.options.prefix = 'logux'\n    }\n\n    this.isLocalStorage = false\n    if (typeof localStorage !== 'undefined') {\n      let random = nanoid()\n      try {\n        localStorage.setItem(random, '1')\n        localStorage.removeItem(random)\n        this.isLocalStorage = true\n      } catch {}\n    }\n\n    if (!this.options.time) {\n      this.clientId = this.options.userId + ':' + this.getClientId()\n      this.tabId = nanoid(8)\n    } else {\n      this.tabId = this.options.time.lastId + 1 + ''\n      this.clientId = this.options.userId + ':' + this.tabId\n    }\n\n    this.nodeId = this.clientId + ':' + this.tabId\n    let store = this.options.store || new MemoryStore()\n\n    let log\n    if (this.options.time) {\n      log = this.options.time.nextLog({ store, nodeId: this.nodeId })\n    } else {\n      log = new Log({ store, nodeId: this.nodeId })\n    }\n    this.log = log\n\n    log.on('preadd', (action, meta) => {\n      if (parseId(meta.id).nodeId === this.nodeId && !meta.subprotocol) {\n        meta.subprotocol = this.options.subprotocol\n      }\n      if (meta.sync && !meta.resubscribe) meta.reasons.push('syncing')\n    })\n\n    this.last = {}\n    this.subscriptions = {}\n    let subscribing = {}\n    let unsubscribing = {}\n\n    this.emitter = createNanoEvents()\n    this.on('add', (action, meta) => {\n      let type = action.type\n      let json, last\n      if (type === 'logux/processed' || type === 'logux/undo') {\n        this.log.removeReason('syncing', { id: action.id })\n      }\n      if (type === 'logux/subscribe' && !meta.resubscribe) {\n        subscribing[meta.id] = action\n      } else if (type === 'logux/unsubscribe') {\n        unsubscribing[meta.id] = action\n      } else if (type === 'logux/processed') {\n        if (unsubscribing[action.id]) {\n          let unsubscription = unsubscribing[action.id]\n          json = JSON.stringify({ ...unsubscription, type: 'logux/subscribe' })\n          let subscribers = this.subscriptions[json]\n          if (subscribers) {\n            if (subscribers === 1) {\n              delete this.subscriptions[json]\n            } else {\n              this.subscriptions[json] = subscribers - 1\n            }\n          }\n        }\n        if (subscribing[action.id]) {\n          let subscription = subscribing[action.id]\n          delete subscribing[action.id]\n          json = JSON.stringify(subscription)\n          if (this.subscriptions[json]) {\n            this.subscriptions[json] += 1\n          } else {\n            this.subscriptions[json] = 1\n          }\n          last = this.last[subscription.channel]\n          if (!last || isFirstOlder(last, meta)) {\n            this.last[subscription.channel] = { id: meta.id, time: meta.time }\n          }\n        }\n        if (type === 'logux/processed' && this.processing[action.id]) {\n          this.processing[action.id][1](meta)\n          delete this.processing[action.id]\n        }\n      } else if (type === 'logux/undo') {\n        if (this.processing[action.id]) {\n          this.processing[action.id][2](new LoguxUndoError(action))\n          delete this.processing[action.id]\n        }\n        delete subscribing[action.id]\n        delete unsubscribing[action.id]\n      } else if (meta.channels) {\n        if (!meta.id.includes(' ' + this.clientId + ':')) {\n          meta.channels.forEach(channel => {\n            last = this.last[channel]\n            if (!last || isFirstOlder(last, meta)) {\n              this.last[channel] = { id: meta.id, time: meta.time }\n            }\n          })\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === 'logux/subscribe' || type === 'logux/unsubscribe') {\n          if (!meta.sync) {\n            console.error(type + ' action without meta.sync')\n          }\n        }\n      }\n    })\n\n    this.tabPing = 60000\n    this.tabTimeout = 10 * this.tabPing\n    let reason = 'tab' + this.tabId\n    if (this.isLocalStorage) {\n      let unbind = log.on('add', (action, meta) => {\n        if (meta.reasons.includes(reason)) {\n          tabPing(this)\n          this.pinging = setInterval(() => {\n            tabPing(this)\n          }, this.tabPing)\n          unbind()\n        }\n      })\n    }\n\n    let connection\n    if (typeof this.options.server === 'string') {\n      let ws = new WsConnection(this.options.server)\n      connection = new Reconnect(ws, {\n        minDelay: this.options.minDelay,\n        maxDelay: this.options.maxDelay,\n        attempts: this.options.attempts\n      })\n    } else {\n      connection = this.options.server\n    }\n\n    let outFilter = async (action, meta) => {\n      return !!meta.sync && parseId(meta.id).userId === this.options.userId\n    }\n\n    let outMap = async (action, meta) => {\n      let filtered = {}\n      for (let i in meta) {\n        if (i === 'subprotocol') {\n          if (meta.subprotocol !== this.options.subprotocol) {\n            filtered.subprotocol = meta.subprotocol\n          }\n        } else if (ALLOWED_META.includes(i)) {\n          filtered[i] = meta[i]\n        }\n      }\n      return [action, filtered]\n    }\n\n    if (!this.options.time) {\n      if (typeof this.options.timeout === 'undefined') {\n        this.options.timeout = 20000\n      }\n      if (typeof this.options.ping === 'undefined') {\n        this.options.ping = 5000\n      }\n    }\n\n    this.node = new ClientNode(this.nodeId, this.log, connection, {\n      subprotocol: this.options.subprotocol,\n      outFilter,\n      timeout: this.options.timeout,\n      fixTime: !this.options.time,\n      outMap,\n      token: this.options.token,\n      ping: this.options.ping\n    })\n\n    if (/^ws:\\/\\//.test(this.options.server) && !opts.allowDangerousProtocol) {\n      let unbindEnvTest = this.node.on('state', () => {\n        if (this.node.state === 'synchronized') {\n          unbindEnvTest()\n          if (this.node.remoteHeaders.env !== 'development') {\n            console.error(\n              'Without SSL, old proxies block WebSockets. ' +\n                'Use WSS for Logux or set allowDangerousProtocol option.'\n            )\n            this.destroy()\n          }\n        }\n      })\n    }\n\n    this.node.on('debug', (type, stack) => {\n      if (type === 'error') {\n        console.error('Error on Logux server:\\n', stack)\n      }\n    })\n\n    let disconnected = true\n    this.node.on('state', () => {\n      let state = this.node.state\n      if (state === 'synchronized' || state === 'sending') {\n        if (disconnected) {\n          disconnected = false\n          for (let i in this.subscriptions) {\n            let action = JSON.parse(i)\n            let since = this.last[action.channel]\n            if (since) action.since = since\n            this.log.add(action, { sync: true, resubscribe: true })\n          }\n        }\n      } else if (this.node.state === 'disconnected') {\n        disconnected = true\n      }\n    })\n\n    this.onUnload = this.onUnload.bind(this)\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('unload', this.onUnload)\n    }\n\n    this.processing = {}\n  }\n\n  get state() {\n    return this.node.state\n  }\n\n  get connected() {\n    return this.state !== 'disconnected' && this.state !== 'connecting'\n  }\n\n  start() {\n    this.cleanPrevActions()\n    this.node.connection.connect()\n  }\n\n  sync(action, meta = {}) {\n    meta.sync = true\n    if (typeof meta.id === 'undefined') {\n      meta.id = this.log.generateId()\n    }\n\n    this.log.add(action, meta)\n    return track(this, meta.id)\n  }\n\n  type(type, listener, opts) {\n    return this.log.type(type, listener, opts)\n  }\n\n  on(event, listener) {\n    if (event === 'state') {\n      return this.node.emitter.on(event, listener)\n    } else if (event === 'user') {\n      return this.emitter.on(event, listener)\n    } else {\n      return this.log.emitter.on(event, listener)\n    }\n  }\n\n  changeUser(userId, token) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    let wasConnected = this.node.connected\n    if (wasConnected) this.node.connection.disconnect('destroy')\n\n    this.options.userId = userId\n    this.options.token = token\n    this.clientId = userId + ':' + this.getClientId()\n    this.nodeId = this.clientId + ':' + this.tabId\n\n    this.log.nodeId = this.nodeId\n    this.node.localNodeId = this.nodeId\n    this.node.options.token = token\n\n    this.emitter.emit('user', userId)\n    if (wasConnected) this.node.connection.connect()\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    this.onUnload()\n    this.node.destroy()\n    clearInterval(this.pinging)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('unload', this.onUnload)\n    }\n  }\n\n  clean() {\n    this.destroy()\n    return this.log.store.clean ? this.log.store.clean() : Promise.resolve()\n  }\n\n  cleanPrevActions() {\n    if (!this.isLocalStorage) return\n\n    for (let i in localStorage) {\n      let prefix = this.options.prefix + ':tab:'\n      if (i.slice(0, prefix.length) === prefix) {\n        let time = parseInt(localStorage.getItem(i))\n        if (Date.now() - time > this.tabTimeout) {\n          cleanTabActions(this, i.slice(prefix.length))\n        }\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.pinging) cleanTabActions(this, this.tabId)\n  }\n\n  getClientId() {\n    return nanoid(8)\n  }\n}\n","import { LoguxError, actionEvents } from '@logux/core'\n\nimport { Client } from '../client/index.js'\n\nfunction storageKey(client, name) {\n  return client.options.prefix + ':' + client.options.userId + ':' + name\n}\n\nfunction sendToTabs(client, event, data) {\n  if (!client.isLocalStorage) return\n  let key = storageKey(client, event)\n  let json = JSON.stringify(data)\n  try {\n    localStorage.setItem(key, json)\n  } catch (e) {\n    console.error(e)\n    client.isLocalStorage = false\n    client.role = 'leader'\n    client.emitter.emit('role')\n    client.node.connection.connect()\n  }\n}\n\nfunction getLeader(client) {\n  let data = localStorage.getItem(storageKey(client, 'leader'))\n  let json = []\n  if (typeof data === 'string') json = JSON.parse(data)\n  return json\n}\n\nfunction leaderPing(client) {\n  sendToTabs(client, 'leader', [client.tabId, Date.now()])\n}\n\nfunction onDeadLeader(client) {\n  if (client.state !== 'disconnected') {\n    setState(client, 'disconnected')\n  }\n  startElection(client)\n}\n\nfunction watchForLeader(client) {\n  clearTimeout(client.watching)\n  client.watching = setTimeout(() => {\n    if (!isActiveLeader(client)) {\n      onDeadLeader(client)\n    } else {\n      watchForLeader(client)\n    }\n  }, client.roleTimeout)\n}\n\nfunction compareSubprotocols(left, right) {\n  let leftParts = left.split('.')\n  let rightParts = right.split('.')\n  for (let i = 0; i < 3; i++) {\n    let leftNumber = parseInt(leftParts[i] || 0)\n    let rightNumber = parseInt(rightParts[i] || 0)\n    if (leftNumber > rightNumber) {\n      return 1\n    } else if (leftNumber < rightNumber) {\n      return -1\n    }\n  }\n  return 0\n}\n\nfunction setRole(client, role) {\n  if (client.role !== role) {\n    let node = client.node\n    client.role = role\n\n    clearTimeout(client.watching)\n    if (role === 'leader') {\n      localStorage.removeItem(storageKey(client, 'state'))\n      client.leadership = setInterval(() => {\n        if (!client.unloading) leaderPing(client)\n      }, client.leaderPing)\n      node.connection.connect()\n    } else {\n      clearTimeout(client.elections)\n      clearInterval(client.leadership)\n\n      if (node.state !== 'disconnected') {\n        client.node.connection.disconnect()\n      }\n    }\n\n    if (role === 'follower') {\n      let state = 'disconnected'\n      let json = localStorage.getItem(storageKey(client, 'state'))\n      if (json && json !== null) state = JSON.parse(json)\n      if (state !== client.state) {\n        client.state = state\n        client.emitter.emit('state')\n      }\n    }\n\n    client.emitter.emit('role')\n  }\n}\n\nfunction isActiveLeader(client) {\n  let leader = getLeader(client)\n  return leader[1] && leader[1] >= Date.now() - client.leaderTimeout\n}\n\nfunction startElection(client) {\n  leaderPing(client)\n  setRole(client, 'candidate')\n  client.elections = setTimeout(() => {\n    let data = getLeader(client, 'leader')\n    if (data[0] === client.tabId) {\n      setRole(client, 'leader')\n    } else {\n      setRole(client, 'follower')\n      watchForLeader(client)\n    }\n  }, client.electionDelay)\n}\n\nfunction setState(client, state) {\n  client.state = state\n  client.emitter.emit('state')\n  sendToTabs(client, 'state', client.state)\n}\n\nfunction isMemory(store) {\n  return Array.isArray(store.entries) && Array.isArray(store.added)\n}\n\nexport class CrossTabClient extends Client {\n  constructor(opts = {}) {\n    super(opts)\n\n    this.role = 'candidate'\n\n    this.roleTimeout = 3000 + Math.floor(Math.random() * 1000)\n    this.leaderTimeout = 5000\n    this.leaderPing = 2000\n    this.electionDelay = 1000\n\n    this.leaderState = this.node.state\n\n    this.node.on('state', () => {\n      if (this.role === 'leader') {\n        setState(this, this.node.state)\n      }\n    })\n\n    this.log.on('add', (action, meta) => {\n      actionEvents(this.emitter, 'add', action, meta)\n      if (meta.tab !== this.tabId) {\n        sendToTabs(this, 'add', [this.tabId, action, meta])\n      }\n    })\n    this.log.on('clean', (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('storage', e => this.onStorage(e))\n      window.addEventListener('unload', e => this.onUnload(e))\n    }\n\n    if (this.isLocalStorage) {\n      let subprotocolKey = storageKey(this, 'subprotocol')\n      if (localStorage.getItem(subprotocolKey) !== this.options.subprotocol) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      }\n    }\n  }\n\n  get state() {\n    return this.leaderState\n  }\n\n  set state(value) {\n    this.leaderState = value\n  }\n\n  start() {\n    this.cleanPrevActions()\n\n    if (!this.isLocalStorage) {\n      this.role = 'leader'\n      this.emitter.emit('role')\n      this.node.connection.connect()\n      return\n    }\n\n    if (isActiveLeader(this)) {\n      setRole(this, 'follower')\n      watchForLeader(this)\n    } else {\n      startElection(this)\n    }\n  }\n\n  destroy() {\n    super.destroy()\n\n    clearTimeout(this.watching)\n    clearTimeout(this.elections)\n    clearInterval(this.leadership)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('storage', this.onStorage)\n    }\n  }\n\n  clean() {\n    if (this.isLocalStorage) {\n      localStorage.removeItem(storageKey(this, 'add'))\n      localStorage.removeItem(storageKey(this, 'state'))\n      localStorage.removeItem(storageKey(this, 'client'))\n      localStorage.removeItem(storageKey(this, 'leader'))\n    }\n    return super.clean()\n  }\n\n  changeUser(userId, token) {\n    sendToTabs(this, 'user', [this.tabId, userId])\n    super.changeUser(userId, token)\n  }\n\n  type(type, listener, opts = {}) {\n    if (opts.event === 'preadd') {\n      return this.log.type(type, listener, opts)\n    } else {\n      let event = opts.event || 'add'\n      let id = opts.id || ''\n      return this.emitter.on(`${event}-${type}-${id}`, listener)\n    }\n  }\n\n  on(event, listener) {\n    if (event === 'preadd') {\n      return this.log.emitter.on(event, listener)\n    } else {\n      return this.emitter.on(event, listener)\n    }\n  }\n\n  onStorage(e) {\n    if (e.newValue === null) return\n\n    let data\n    if (e.key === storageKey(this, 'add')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        let action = data[1]\n        let meta = data[2]\n        if (!meta.tab || meta.tab === this.tabId) {\n          if (isMemory(this.log.store)) {\n            this.log.store.add(action, meta)\n          }\n          actionEvents(this.emitter, 'add', action, meta)\n          if (this.role === 'leader') {\n            this.node.onAdd(action, meta)\n          }\n        }\n      }\n    } else if (e.key === storageKey(this, 'leader')) {\n      data = JSON.parse(e.newValue)\n      if (data.length === 0) {\n        onDeadLeader(this)\n      } else if (data[0] !== this.tabId && this.role !== 'candidate') {\n        setRole(this, 'follower')\n        watchForLeader(this)\n      }\n    } else if (e.key === storageKey(this, 'state')) {\n      let state = JSON.parse(localStorage.getItem(e.key))\n      if (this.leaderState !== state) {\n        this.leaderState = state\n        this.emitter.emit('state')\n      }\n    } else if (e.key === storageKey(this, 'user')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        this.emitter.emit('user', data[1])\n      }\n    } else if (e.key === storageKey(this, 'subprotocol')) {\n      let other = JSON.parse(e.newValue)\n      let compare = compareSubprotocols(this.options.subprotocol, other)\n      if (compare === 1) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      } else if (compare === -1) {\n        let err = new LoguxError(\n          'wrong-subprotocol',\n          { supported: other, used: this.options.subprotocol },\n          true\n        )\n        this.node.emitter.emit('error', err)\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.role === 'leader') {\n      this.unloading = true\n      sendToTabs(this, 'leader', [])\n    }\n    super.onUnload()\n  }\n\n  getClientId() {\n    let key = storageKey(this, 'client')\n    if (!this.isLocalStorage) {\n      return super.getClientId()\n    } else if (localStorage.getItem(key)) {\n      return localStorage.getItem(key)\n    } else {\n      let clientId = super.getClientId()\n      localStorage.setItem(key, clientId)\n      return clientId\n    }\n  }\n}\n","function block(e) {\n  e.returnValue = 'unsynced'\n  return 'unsynced'\n}\n\nexport function confirm(client) {\n  let disconnected = client.state === 'disconnected'\n  let wait = false\n\n  let update = () => {\n    if (client.state === 'disconnected') {\n      disconnected = true\n    } else if (client.state === 'synchronized') {\n      disconnected = false\n      wait = false\n    }\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      if (client.role !== 'follower' && wait && disconnected) {\n        window.addEventListener('beforeunload', block)\n      } else {\n        window.removeEventListener('beforeunload', block)\n      }\n    }\n  }\n\n  let unbind = []\n  unbind.push(client.on('role', update))\n  unbind.push(client.on('state', update))\n  update()\n\n  unbind.push(\n    client.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n      if (disconnected && meta.sync && meta.added) {\n        wait = true\n        update()\n      }\n    })\n  )\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { parseId } from '@logux/core'\n\nfunction bold(string) {\n  return '%c' + string + '%c'\n}\n\nfunction showLog(text, details) {\n  text = '%cLogux%c ' + text\n  let args = Array.from(text.match(/%c/g)).map((_, i) => {\n    if (i === 0) {\n      return 'color:#ffa200;font-weight:bold'\n    } else if (i % 2 === 0) {\n      return 'font-weight:bold'\n    } else {\n      return 'font-weight:normal'\n    }\n  })\n\n  if (details) {\n    console.groupCollapsed(text, ...args)\n    for (let name in details) {\n      if (typeof details[name] === 'string') {\n        console.log(name + ': %c' + details[name], 'font-weight:bold')\n      } else {\n        console.log(name, details[name])\n      }\n    }\n    console.groupEnd()\n  } else {\n    console.log(text, ...args)\n  }\n}\n\nexport function log(client, messages = {}) {\n  let node = client.node\n\n  let sent = {}\n  let unbind = []\n  let prevConnected = false\n\n  if (messages.state !== false) {\n    unbind.push(\n      client.on('state', () => {\n        let details\n        if (client.state === 'connecting' && node.connection.url) {\n          details = {\n            'Node ID': node.localNodeId,\n            'Server': node.connection.url\n          }\n        } else if (client.connected && !prevConnected && node.remoteNodeId) {\n          prevConnected = true\n          details = {\n            'Server ID': node.remoteNodeId\n          }\n        } else if (!client.connected) {\n          prevConnected = false\n        }\n        showLog('state is ' + bold(client.state), details)\n      })\n    )\n  }\n\n  if (messages.role !== false) {\n    unbind.push(\n      client.on('role', () => {\n        showLog('tab role is ' + bold(client.role))\n      })\n    )\n  }\n\n  let cleaned = {}\n  let ignore = (messages.ignoreActions || []).reduce((all, i) => {\n    all[i] = true\n    return all\n  }, {})\n\n  if (messages.add !== false) {\n    unbind.push(\n      client.on('add', (action, meta) => {\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (meta.sync) sent[meta.id] = action\n        let message\n        if (action.type === 'logux/subscribe') {\n          message = 'subscribing to ' + bold(action.channel) + ' channel'\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/subscribed') {\n          showLog(\n            'subscribed to ' + bold(action.channel) + ' channel by server'\n          )\n        } else if (action.type === 'logux/unsubscribe') {\n          message = 'unsubscribed from channel ' + bold(action.channel)\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/processed') {\n          if (sent[action.id]) {\n            let processed = sent[action.id]\n            let details = {\n              'Processed Action': processed\n            }\n            if (processed.type === 'logux/subscribe') {\n              showLog(\n                'subscribed to ' + bold(processed.channel) + ' channel',\n                details\n              )\n            } else {\n              showLog(\n                'action ' + bold(processed.type) + ' was processed',\n                details\n              )\n            }\n            delete sent[action.id]\n          } else {\n            showLog('action ' + bold(action.id) + ' was processed')\n          }\n        } else if (action.type === 'logux/undo') {\n          if (action.action.type === 'logux/subscribe') {\n            message = 'subscription to ' + bold(action.action.channel)\n          } else {\n            message = 'action ' + bold(action.action.type)\n          }\n          message += ' was undone because of ' + bold(action.reason)\n          let details = {\n            'Reverted Action': action.action\n          }\n          if (Object.keys(action).length > 4) {\n            details['Undo Action'] = action\n          }\n          if (sent[action.id]) {\n            delete sent[action.id]\n          }\n          showLog(message, details)\n        } else {\n          let details = { Action: action, Meta: meta }\n          message = 'added '\n          if (meta.reasons.length === 0) {\n            cleaned[meta.id] = true\n            message += 'and cleaned '\n          }\n          message += bold(action.type) + ' action'\n          let { nodeId } = parseId(meta.id)\n          if (nodeId !== node.localNodeId) {\n            details.From = nodeId\n          }\n          showLog(message, details)\n        }\n      })\n    )\n  }\n\n  if (messages.user !== false) {\n    unbind.push(\n      client.on('user', userId => {\n        let message = 'user ID was changed to ' + bold(userId)\n        showLog(message, { 'Node ID': client.nodeId })\n      })\n    )\n  }\n\n  if (messages.clean !== false) {\n    unbind.push(\n      client.on('clean', (action, meta) => {\n        if (cleaned[meta.id]) {\n          delete cleaned[meta.id]\n          return\n        }\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (action.type.startsWith('logux/')) return\n        let message = 'cleaned ' + bold(action.type) + ' action'\n        showLog(message, { Action: action, Meta: meta })\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6oYAh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iEz5C\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cULX8\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aF8lW\")).toString();","import refresh from './refresh.svg'\nimport success from './success.svg'\nimport offline from './offline.svg'\nimport error from './error.svg'\n\nexport let badgeStyles = {\n  base: {\n    position: 'fixed',\n    width: '15.4em',\n    height: '4em',\n    lineHeight: '1.4',\n    margin: '1.5em',\n    paddingLeft: '4.2em',\n    opacity: '0.8',\n    borderRadius: '0.4em',\n    color: '#fff',\n    fontFamily: 'Helvetica Neue, sans-serif',\n    zIndex: '999',\n    backgroundPosition: '1.2em center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '1.8em'\n  },\n  text: {\n    display: 'table-cell',\n    verticalAlign: 'middle',\n    height: '4em'\n  },\n  synchronized: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + success + ')'\n  },\n  disconnected: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  wait: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  sending: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  },\n  error: {\n    backgroundColor: '#F42A2A',\n    backgroundImage: 'url(' + error + ')'\n  },\n  protocolError: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"joALL\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8ySKy\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9op2g\")).toString();","import { MemoryStore, ClientNode, LocalPair, BaseNode, Log } from '@logux/core'\n\nimport {\n  CrossTabClient,\n  attention,\n  badgeEn,\n  confirm,\n  favicon,\n  status,\n  badge,\n  log\n} from '../../index.js'\nimport { badgeStyles } from '../../badge/styles/index.js'\nimport faviconOffline from './offline.png'\nimport faviconNormal from './normal.png'\nimport faviconError from './error.png'\n\nlet pair = new LocalPair(500)\n\nlet serverLog = new Log({\n  store: new MemoryStore(),\n  nodeId: 'server:uuid'\n})\nnew BaseNode('server:uuid', serverLog, pair.right)\n\nserverLog.on('add', (action, meta) => {\n  if (action.type !== 'logux/processed') {\n    setTimeout(() => {\n      serverLog.add({ type: 'logux/processed', id: meta.id })\n    }, 500)\n  }\n})\n\nlet client = new CrossTabClient({\n  subprotocol: location.hash.slice(1) || '1.0.0',\n  userId: '10',\n  server: 'wss://example.com/'\n})\n\nlet node = new ClientNode(client.node.localNodeId, client.log, pair.left)\nnode.connection.url = 'wss://example.com/'\nnode.emitter = client.node.emitter\nclient.node = node\n\nattention(client)\nconfirm(client)\nfavicon(client, {\n  normal: faviconNormal,\n  offline: faviconOffline,\n  error: faviconError\n})\nbadge(client, {\n  messages: badgeEn,\n  styles: badgeStyles\n})\nlog(client)\nstatus(client, s => {\n  document.all.status.innerText = s\n})\n\nlet count = 0\nfunction emoji(state) {\n  if (state === 'disconnected') {\n    return '😴'\n  } else if (state === 'connecting') {\n    return '🔌'\n  } else {\n    return '😊'\n  }\n}\nfunction role(value) {\n  return value.slice(0, 1).toUpperCase()\n}\nfunction updateTitle() {\n  document.title = emoji(client.state) + ' ' + role(client.role) + ' ' + count\n}\n\nclient.on('state', () => {\n  document.all.connection.checked = client.connected\n  updateTitle()\n})\nclient.on('role', () => {\n  updateTitle()\n  document.all.connection.disabled = client.role !== 'leader'\n})\nclient.on('add', action => {\n  if (action.type === 'TICK') count++\n  updateTitle()\n})\nclient.on('clean', action => {\n  if (action.type === 'TICK') count--\n  updateTitle()\n})\n\nclient.log\n  .each(action => {\n    if (action.type === 'TICK') count++\n  })\n  .then(() => {\n    updateTitle()\n  })\n\nclient.on('role', () => {\n  let isLeader = client.role === 'leader'\n  document.all.connection.disabled = !isLeader\n  document.all.disabled.style.display = isLeader ? 'none' : 'inline'\n})\n\nclient.start()\n\ndocument.all.connection.onchange = e => {\n  if (e.target.checked) {\n    client.node.connection.connect()\n  } else {\n    client.node.connection.disconnect()\n  }\n}\n\ndocument.all.add.onclick = () => {\n  client.log.add({ type: 'TICK' }, { reasons: ['tick'], sync: true })\n}\n\ndocument.all.clean.onclick = () => {\n  client.log.removeReason('tick')\n}\n\ndocument.all.error.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'error' })\n  }, 3000)\n}\n\ndocument.all.denied.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'denied' })\n  }, 3000)\n}\n\ndocument.all.serverError.onclick = () => {\n  setTimeout(() => {\n    pair.right.send(['error', 'wrong-format'])\n  }, 3000)\n}\n\ndocument.all.subprotocolError.onclick = () => {\n  client.node.syncError('wrong-subprotocol', {\n    supported: '2.x',\n    used: '1.0.0'\n  })\n}\n\nif (client.options.subprotocol === '1.0.1') {\n  document.all.subprotocolClient.disabled = true\n} else {\n  document.all.subprotocolClient.onclick = () => {\n    window.open(location.toString() + '#1.0.1', '_blank')\n  }\n}\n","export function track(client, id) {\n  if (client.processing[id]) return client.processing[id][0]\n\n  let resolveCallback, rejectCallback\n  let promise = new Promise((resolve, reject) => {\n    resolveCallback = resolve\n    rejectCallback = reject\n  })\n  client.processing[id] = [promise, resolveCallback, rejectCallback]\n\n  return promise\n}\n","export function attention(client) {\n  let doc = document\n  let originTitle = false\n  let unbind = []\n  let timeout = false\n\n  let restoreTitle = () => {\n    if (originTitle) {\n      doc.title = originTitle\n      originTitle = false\n    }\n  }\n\n  let blink = () => {\n    if (doc.hidden && !originTitle) {\n      originTitle = doc.title\n      doc.title = '* ' + doc.title\n    } else {\n      restoreTitle()\n    }\n\n    if (doc.hidden) timeout = setTimeout(blink, 1000)\n  }\n\n  let tabListener = () => {\n    if (!doc.hidden && timeout) {\n      timeout = clearTimeout(timeout)\n      restoreTitle()\n    }\n  }\n\n  if (doc && typeof doc.hidden !== 'undefined') {\n    unbind.push(\n      client.node.on('error', error => {\n        if (error.type !== 'timeout' && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    document.addEventListener('visibilitychange', tabListener, false)\n    unbind.push(() => {\n      document.removeEventListener('visibilitychange', tabListener, false)\n    })\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","export function favicon(client, links) {\n  let normal = links.normal\n  let offline = links.offline\n  let error = links.error\n\n  let unbind = []\n  let doc = document\n  let fav = false\n  let prevFav = false\n\n  function update() {\n    if (client.connected && prevFav !== normal) {\n      fav.href = prevFav = normal\n    } else if (\n      !client.connected &&\n      offline &&\n      prevFav !== offline &&\n      prevFav !== error\n    ) {\n      fav.href = prevFav = offline\n    }\n  }\n\n  function setError() {\n    if (error && prevFav !== error) {\n      fav.href = prevFav = error\n    }\n  }\n\n  if (doc) {\n    fav = doc.querySelector('link[rel~=\"icon\"]')\n\n    if (typeof normal === 'undefined') {\n      normal = fav ? fav.href : ''\n    }\n\n    if (!fav) {\n      fav = doc.createElement('link')\n      fav.rel = 'icon'\n      fav.href = ''\n      doc.head.appendChild(fav)\n    }\n\n    unbind.push(client.on('state', update))\n    update()\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason) setError()\n      })\n    )\n\n    unbind.push(\n      client.node.on('error', err => {\n        if (err.type !== 'timeout') setError()\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n"],"names":["$36da84a2e5ebb7dc$export$6503ec6e8aabbaf","$36da84a2e5ebb7dc$export$f7ad0328861e2f03","$36da84a2e5ebb7dc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$d876bf4e93556ea2$export$c944a4526d4ed4f3","events","emit","event","args","this","forEach","on","cb","push","filter","$1d66856225a58a08$export$b283a0679303f4ba","emitter","action","meta","type","$1d66856225a58a08$export$ce30dbb46644d06c","listener","opts","newId","generateId","time","parseInt","reasons","keepLast","removeReason","olderThan","action2","store","byId","addedMeta","add","now","Date","lastTime","sequence","nodeId","each","callback","order","Promise","resolve","nextPage","get","result","page","entries","entry","next","bind","diff","k","remove","changeMeta","reason","criteria","$39ff97dd0e81c8b3$export$a5c06b7241b24c94","firstMeta","secondMeta","first","split","second","firstNode","secondNode","firstCounter","secondCounter","firstNodeTime","secondNodeTime","$1fa7c02a11401d93$export$ea0df116fa892998","init","ws","onerror","error","onclose","onmessage","data","connect","Class","url","undefined","onopen","connected","disconnect","close","send","message","readyState","OPEN","stringify","err","received","WebSocket","$008b5e73f8eecaa0$var$checkIndex","index","indexes","added","$008b5e73f8eecaa0$var$forEachIndex","$008b5e73f8eecaa0$var$isDefined","$008b5e73f8eecaa0$var$insert","lastAdded","$008b5e73f8eecaa0$var$eject","start","end","middle","otherAdded","splice","$008b5e73f8eecaa0$var$find","list","value","$008b5e73f8eecaa0$export$b72d712fed4d036d","otherMeta","indexList","j","findIndex","item","created","indexed","slice","key","removed","reasonPos","indexOf","c","youngerThan","minAdded","maxAdded","removedAdded","map","m","removing","includes","meta1","lastReceived","lastSent","sent","values","$3d418336ca5714bb$export$2abef671c5ad47c8","options","supported","used","super","name","description","describe","captureStackTrace","$d3a32a3950e10f5f$var$auth","node","token","auth","authenticated","remoteHeaders","unauthenticated","onMessage","sendError","destroy","e","$d3a32a3950e10f5f$var$checkProtocol","ver","remoteProtocol","minProtocol","$d3a32a3950e10f5f$var$emitEvent","$5810171a6d75ad17$var$NOT_TO_THROW","timeout","$5810171a6d75ad17$var$BEFORE_AUTH","$5810171a6d75ad17$var$syncMappedEvent","lastAddedCache","outMap","changed","sendSync","$5810171a6d75ad17$export$410b0c854570d131","catch","throwsError","unbind","waitFor","state","connection","clearTimeout","pingTimeout","endTimeout","setLocalHeaders","headers","localHeaders","sendHeaders","msg","delayPing","onConnecting","setState","onConnect","onDisconnect","timeouts","outFilter","syncError","startTimeout","ms","setTimeout","shift","ping","sendPing","lastSynced","promises","log","then","r","all","syncSinceQuery","setLastSent","setLastSynced","setLastReceived","synced","getLastSynced","getLastAdded","initialized","sendDuilian","$5810171a6d75ad17$var$DUILIANS","duilianMessage","line","remoteNodeId","remoteSubprotocol","localProtocol","localNodeId","timeFix","syncing","onAdd","initializing","initialize","prototype","sendConnect","subprotocol","fixTime","connectSended","sendConnected","connectMessage","baseTime","syncSince","connectedMessage","authTime","roundTrip","Math","floor","originMeta","unshift","concat","sendSynced","syncMessage","join","process","inMap","meta2","filtered","inFilter","res","syncedMessage","pingMessage","pongMessage","sendDebug","debugMessage","errorMessage","headersMessage","$e498a8c71ba1e290$var$DEFAULT_OPTIONS","$e498a8c71ba1e290$export$b4fa87e80e36ef61","$b9fce833465b4433$var$LocalConnection","other","pair","right","left","delay","$01fffeb060f191fe$var$DEFAULT_OPTIONS","minDelay","maxDelay","attempts","Infinity","$01fffeb060f191fe$var$FATAL_ERRORS","$01fffeb060f191fe$export$495c43d07cb6ba9a","reconnecting","reconnect","nextDelay","timer","connecting","base","rand","random","deviation","min","visibility","document","hidden","navigator","onLine","window","addEventListener","removeEventListener","$bfbe87293f7dc9a0$export$bf3b66d897b985f1","parts","userId","clientId","$ca74aeddf6f6e4e4$export$471f7ae5c4103ae1","client","observable","disconnected","wait","old","duration","processing","setSynchronized","changeState","sync","$72e90b5c41fa8b0e$var$injectStyles","element","styles","style","$72e90b5c41fa8b0e$var$RESET","boxSizing","textIndent","textTransform","wordSpacing","letterSpacing","fontStyle","fontVariant","fontWeight","lineHeight","$2d10d5f430cd6bf5$export$ac4959f4f1338dfc","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","$43493949eed14d08$export$5e6967d3d1d0f8e8","$13bd0331ed4c6f42$var$ALLOWED_META","$13bd0331ed4c6f42$var$tabPing","localStorage","setItem","prefix","tabId","$13bd0331ed4c6f42$var$cleanTabActions","isLocalStorage","removeItem","$92880aeea7e47d37$var$storageKey","$92880aeea7e47d37$var$sendToTabs","json","console","role","$92880aeea7e47d37$var$getLeader","getItem","$92880aeea7e47d37$var$leaderPing","$92880aeea7e47d37$var$onDeadLeader","$92880aeea7e47d37$var$setState","$92880aeea7e47d37$var$startElection","$92880aeea7e47d37$var$watchForLeader","watching","$92880aeea7e47d37$var$isActiveLeader","roleTimeout","$92880aeea7e47d37$var$setRole","leadership","setInterval","unloading","leaderPing","elections","clearInterval","leader","leaderTimeout","electionDelay","$14432fafe9b1f292$var$block","returnValue","$b180e4f359139a62$var$bold","string","$b180e4f359139a62$var$showLog","text","details","Array","from","match","_","groupCollapsed","groupEnd","$4319c9c474943be3$exports","URL","import","$f77c089556affac4$exports","$c6eee060b7107a65$exports","$ef12908de275bc9f$exports","$2b45d7e40e2e0e61$export$92de9191ffb7ae9b","position","width","height","margin","paddingLeft","opacity","borderRadius","color","fontFamily","zIndex","backgroundPosition","backgroundRepeat","backgroundSize","display","verticalAlign","synchronized","backgroundColor","backgroundImage","$parcel$interopDefault","sending","protocolError","$ee4c2c949a92884f$exports","$2cb79e0efe598ca8$exports","$9361ba0822347078$exports","$71d6922eb9d326ce$var$pair","$71d6922eb9d326ce$var$serverLog","$71d6922eb9d326ce$var$client","cleanPrevActions","resolveCallback","rejectCallback","promise","reject","$8bd902903ed3993f$export$6b2a7d5132615086","changeUser","wasConnected","getClientId","onUnload","pinging","clean","tabTimeout","lastId","nextLog","resubscribe","last","subscriptions","subscribing","unsubscribing","unsubscription","subscribers","subscription","channel","channels","tabPing","server","async","test","allowDangerousProtocol","unbindEnvTest","env","stack","since","leaderState","onStorage","newValue","tab","isArray","compare","leftParts","rightParts","leftNumber","rightNumber","$92880aeea7e47d37$var$compareSubprotocols","subprotocolKey","location","hash","$71d6922eb9d326ce$var$node","doc","originTitle","restoreTitle","title","blink","tabListener","$d7e41fcc2cda5154$export$45b92471da762af7","update","$14432fafe9b1f292$export$715f9d76bb8c1fea","links","normal","offline","fav","prevFav","href","setError","querySelector","createElement","rel","head","appendChild","$beb3ce22e0db6c85$export$d1d228f217d37317","messages","widget","setAttribute","top","transform","pos","$72e90b5c41fa8b0e$var$setPosition","show","innerHTML","denied","body","$72e90b5c41fa8b0e$export$4aebd143f31d0c0d","prevConnected","Server","cleaned","ignore","ignoreActions","reduce","Action","processed","Meta","From","user","startsWith","$b180e4f359139a62$export$bef1f36f5486a6a3","s","status","innerText","$71d6922eb9d326ce$var$count","$71d6922eb9d326ce$var$updateTitle","checked","disabled","isLeader","onchange","target","onclick","serverError","subprotocolError","subprotocolClient","open"],"version":3,"file":"index.c6f74603.js.map"}